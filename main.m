data=xlsread('data.xlsx',2,'B3:B5403');
%%
%时间以0.1 为步长增长，空间以0.1 为步长增长
%温度U,距离X,时间t
nt = 54000;
%各层相应密度
e1 = 300;
e2 = 862;
e3 = 74.2;
e4 = 1.18;
%各层相应比热
c1 = 1377;
c2 = 2100;
c3 = 1726;
c4 = 1005;
%各层相应热传导率
k1 = 0.082;
k2 = 0.37;
k3 = 0.045;
k4 = 0.028;
%算出在不同介质中的D，即热力学偏微分方程系数
a12 = k1/(c1*e1);
a22 = k2/(c2*e2);
a32 = k3/(c3*e3);
a42 = k4/(c4*e4);
%算出在不同的介质中运用差分方程的r值
r1 = a12*1e7;
r2 = a22*1e7;%dt=0.1,dx=0.1*1e(-3),dt/dx^2
r3 = a32*1e7;
r4 = a42*1e7;
%定义温度常数
Th=37;
Ts=75;

%总共的长度为15.2mm,则dx步长为0.1时，一共取153个散点，这是x方向上的
%总时间为5400s, 则取dt=0.1时54000个点，（本来应该是54001个），这里方便起见
%初始化温度矩阵
T=zeros(153,nt);
T(:,1)=Th;%初值条件
T(1,:)=Ts;%边界条件1，属于第一类边界条件，还有一个边界条件在后面

for i=1:nt-1
    
    %第一层
    d1=T(2:6,i);%1：7
    d1(1)=d1(1)+r1*T(1,i);
    d1(5)=d1(5)+r1*T(7,i);%根据三对角矩阵推导得到
    T(2:6,i+1)=Thomas_algo(r1,d1);%得到除了边界之外的下一个时间节点上，某层物质上温度得散点分布
    %边界将在后面处理
    d2=T(8:66,i);%7：67
    d2(1)=d2(1)+r2*T(7,i);
    d2(end)=d2(end)+r2*T(67,i);%根据三对角矩阵推导得到
    T(8:66,i+1)=Thomas_algo(r2,d2);%得到除了边界之外的下一个时间节点上，某层物质上温度得散点分布
    %边界将在后面处理
    d3=T(68:102,i);%67:103
    d3(1)=d3(1)+r3*T(67,i);
    d3(end)=d3(end)+r3*T(103,i);%根据三对角矩阵推导得到
    T(68:102,i+1)=Thomas_algo(r3,d3);%得到除了边界之外的下一个时间节点上，某层物质上温度得散点分布
    %边界将在后面处理
    d4=T(104:152,i);%103:153
    d4(1)=d4(1)+r4*T(103,i);
    %接下来用给得数据来进行边界条件得确定，因为54000>5400所以要用插值函数，这里用线性插值
    if i+1~=54000
        T(153,i+1)=mod(i+1,10)*(data((floor((i+1)/10) + 2))-data((floor((i+1)/10) + 1)))/10+data((floor((i+1)/10) + 1));
    else
        T(153,i+1)=mod((i+1),10)*(data((floor((i+1)/10) + 1))-data((floor((i+1)/10))))/10+data((floor((i+1)/10) + 1));%后向差分
    end
    

    d4(end)=d4(end)+r4*T(153,i+1);%根据三对角矩阵推导得到
    T(104:152,i+1)=Thomas_algo(r4,d4);%得到除了边界之外的下一个时间节点上，某层物质上温度得散点分布
    %边界将在后面处理
    T(7,i+1) = ( k1 * T(6,i+1) + k2 * T(8,i+1))/(k1 + k2);
    T(67,i+1) = (k2 * T(66,i+1) + k3 * T(68,i+1))/(k2 + k3);
    T(103,i+1) = (k3 * T(102,i+1) + k4 * T(104,i+1))/(k3 + k4);
    i
end
%%
x=1:153;
y=1:54000;
[xx,yy]=meshgrid(x,y);
mesh(xx',yy',T)






















